Answers to practice final:

1a: same		dog
1b: same		
1c: not same		ex: aaa

chmod u+x buildwords.sh

Makefile:
	CXX=gcc

	srot :	srot.c
		$(CXX) srot.c -o srot

	clean :
		rm -f srot


#! /bin/bash

strValue=`gcc --version | grep 4.7.2`

count=0

for word in $strValue; do
	let count=count+1
done

if [ count -eq 0 ]; then
	echo "This software requires gcc 4.7.2 version"
else
	echo "CXX=gcc

	srot :	srot.c
		$(CXX) srot.c -o srot

	clean :
		rm -f srot" > Makefile
fi



float ***M;

M = (float***) malloc(sizeof(float **) *100);
for (int i = 0; i < 100; i++)
	{
		M[i] = (float**) malloc(sizeof(float *) *200);
		for (int k = 0; k < 200; k++)
			M[i][k] = (float *) malloc(size(float) * 300);
	}

for (int p = 0; p < 100; p++)
{
	for (int j = 0; j < 200; j++)
		{
			free(M[p][j]);
		}
		free(M[p]);
}

free(M);


grep real < make-log.txt | sed 's/real.*m//' |  sed 's/\..*s//'

int CompareSpheres(void *r1, void *r2)
{
	sphere * a = (sphere *)r1;
	sphere * b = (sphere *)r2;
	if (a->radius < b->radius)
		return -1;
	else if (a->radius > b->radius)
		return 1;
	else {
		Point3D origin;
		origin.x =0;
		origin.y =0;
		origin.z =0;

		float d1 = Distance(a.center, origin);
		float d2 = Distance(b.center, origin);

		return (d1 < d2 ? -1 : 1);

	}
}


